@model PagedList.IPagedList<PrivateTutorOnline.Models.ViewModels.PostedClassViewModel>
@using PrivateTutorOnline.Extensions
@using PagedList.Mvc;
@{
    ViewBag.Title = "Danh sách lớp đã đăng";
}

<h2>Danh sách lớp đã đăng</h2>

<span class="btn btn-default" >
    @Html.ActionLink("Tìm gia sư", "ClassRegistrationForm", "Class")
</span>
<table class="table" style="margin-top:20px;">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().SalaryPerMonth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DayPerWeek)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TutoringTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Grade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Subjects)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Requirement)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ReceivedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().District)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Ward)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Street)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Tutor)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.SalaryPerMonth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DayPerWeek)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TutoringTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Grade.Name)
        </td>
        <td>
            @foreach (var i in item.Subjects)
                {
                <div style="display:inline-block; margin-bottom:5px; padding:5px 5px; background-color:#0080FF; color:white">+ @i.Name</div>
            }
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Requirement)
        </td>
        <td>
            @if (item.ReceivedDate != null)
                {
                @Html.DisplayFor(modelItem => item.ReceivedDate)
            } 
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.District)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ward)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForAdminApproval)
            {
                <span style="color:red">Chờ duyệt</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForTutor)
            {
                <span style="color:red">Chờ gia sư</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.AdminApproved)
            {
                <span style="color:red">Đã duyệt</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.TutorRegistered)
            {
                <span style="color:red">Đã nhận</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.Reject)
            {
                <span style="color:red">Không duyệt</span>
            }
        </td>
        <td>
            @if(item.Tutor != null)
            {
                <span>@item.Tutor.FullName</span>
            }
            else
            {
                <span>Chưa có gia sư</span>
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
@Html.PagedListPager(Model, page => Url.Action("PostedClass", "ManageRegistrationClasses", new { page }))