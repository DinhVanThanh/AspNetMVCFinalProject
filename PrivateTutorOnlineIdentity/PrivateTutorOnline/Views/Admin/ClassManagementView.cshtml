@model PagedList.IPagedList<PrivateTutorOnline.Models.RegistrationClass>
@using PagedList.Mvc;
@{
    ViewBag.Title = "ClassManagementView";
}

<h2>Danh sách lớp cần gia sư</h2>
 
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().SalaryPerMonth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().DayPerWeek)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TutoringTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Requirement)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ReceivedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().District)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Ward)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Street)
        </th> 
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Customer)
        </th> 
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Tutor)
        </th> 
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td class="currency">
            @Html.DisplayFor(modelItem => item.SalaryPerMonth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DayPerWeek)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TutoringTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Requirement)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReceivedDate)
        </td>
        <td id="row-status-@item.Id">
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForAdminApproval)
            {
                <span style="color:red">Chờ duyệt</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForTutor)
            {
                <span style="color:red">Chờ gia sư</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.AdminApproved)
            {
                <span style="color:red">Đã duyệt</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.TutorRegistered)
            {
                <span style="color:red">Đã nhận</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.Reject)
            {
                <span style="color:red">Không duyệt</span>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.District)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ward)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td> 
        <td>
            @item.Customer.FullName
        </td> 
        <td>
            @if(item.Tutor != null)
            {
                <span>item.Tutor.FullName</span>
            }
        </td> 
        <td>
            @if(item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForAdminApproval)
            {
                <button data-class-id="@item.Id" class="btn btn-info btn-approve">Duyệt</button>
                <button data-class-id="@item.Id" class="btn btn-danger btn-not-approve">Không duyệt</button>
            }

        </td>
        <td>
            @Html.ActionLink("Xóa", "DeleteClassRegistration", new { id = item.Id })
        </td>
    </tr>
}

</table>
@Html.PagedListPager(Model, page => Url.Action("ClassManagementView", "Admin", new { page }))
@section Scripts {

    <script src="~/Scripts/AdminClassManagement.js">

    </script>
    <script src="~/Scripts/numeral.js">

    </script>

    <script>
        $(document).ready(function () {
            $('.currency').text(numeral($(this)));
            console.log($('.currency').text(numeral($(this))););
        });
        
    </script>
}