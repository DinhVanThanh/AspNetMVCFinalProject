@model PrivateTutorOnline.Models.ViewModels.ClassManagementViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Quản lí lớp cần gia sư";
}

<h2>Danh sách lớp cần gia sư</h2>

    @using (Html.BeginForm("ClassManagementView", "Admin", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-3" style="padding:20px;">

                <div class="input-group add-on">
                    <input type="text" class="form-control" placeholder="Search" name="searchString" id="searchString">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <div style="display:inline-block; padding:10px;">

            <label>
                <input style="transform:scale(1.5)" type="checkbox" name="IsSeachById" id="SearchByIdCheckBox" value="false" />
                Tìm theo Mã số
            </label>
        </div>
    }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().SalaryPerMonth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().DayPerWeek)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().TutoringTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Grade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Subjects)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Requirement)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().ReceivedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().District)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Ward)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Street)
        </th> 
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Customer)
        </th> 
        <th>
            @Html.DisplayNameFor(model => model.RegistrationClasses.FirstOrDefault().Tutor)
        </th> 
        <th>
            Xem xét
        </th>
        <th>
            Hành động
        </th>
    </tr>

@foreach (var item in Model.RegistrationClasses) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td class="currency">
            @Html.DisplayFor(modelItem => item.SalaryPerMonth) VNĐ
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DayPerWeek)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TutoringTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Grade.Name)
        </td>
        <td>
            @foreach (var i in item.Subjects)
            {
                <div style="display:inline-block; margin-bottom:5px; padding:5px 5px; background-color:#0080FF; color:white">+ @i.Name</div>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Requirement)
        </td> 
        <td>
            @if (item.ReceivedDate != null)
            {
                @Html.DisplayFor(modelItem => item.ReceivedDate)
            }
        </td>
        <td id="row-status-@item.Id">
             @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForAdminApproval)
             {
                <span style="color:red">Chờ duyệt từ Admin</span>
             }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.AdminApproved)
            {
                <span style="color:red">Đã duyệt</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.AdminReject)
            {
                <span style="color:red">Không duyệt</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForCustomerApproval)
            {
                <span style="color:red">Chờ duyệt nhận lớp</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.CustomerApproved)
            {
                <span style="color:red">Lớp đã có gia sư</span>
            }
            @if (item.Status == PrivateTutorOnline.Enums.ClassStatus.CustomerRejected)
            {
                <span style="color:red">Chờ gia sư</span>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.District)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ward)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td> 
        <td>
            @item.Customer.FullName
        </td> 
        <td>
            @if(item.Tutor != null)
            {
                <span>@item.Tutor.FullName</span>
            }
        </td> 
        <td id="approve-reject-class-@item.Id">
            @if(item.Status == PrivateTutorOnline.Enums.ClassStatus.WaitingForAdminApproval)
            {
                <button data-class-id="@item.Id" class="btn btn-info btn-approve">Duyệt</button>
                <button data-class-id="@item.Id" class="btn btn-danger btn-not-approve">Không duyệt</button>
            }
            else
            {
                <span style="color:blue;">Đã xem xét</span>
            }
        </td>
        <td>
            @Html.ActionLink("Xóa", "DeleteClassRegistration", new { id = item.Id })
        </td>
    </tr>
}

</table>
@Html.PagedListPager(Model.RegistrationClasses, page => Url.Action("ClassManagementView", "Admin", new { searchString = Model.searchString, page }))
@section Scripts {

    <script src="~/Scripts/AdminClassManagement.js"></script>
    <script src="~/Scripts/IsSearchByIdCheckBox.js"></script> 
}